1. sub module: 메인 프로젝트와 서브 프로젝트에 의존하고 있다고 하고 그것을 모두 깃으로 관리해야 한다면
                     독립적으로 버전 관리되어야 하고, 

                     메인 프로젝트는 서브 프로젝트의 어떤 버전을 의존할 지 관리하고, 깃형태로 존재할 때
                     그것의 개념이 서브 모듈(sub module)이고 그것은 깃 저장소 안에 다른 깃 저장소를 분리해놓고
                     관리하는 것이다


2. git submodule init: 서브 모듈정보를 기반으로 로컬 환경설정 파일을 준비함

3. got clone 주소: 깃의 저장소를 복제해와서 특정 폴더 안에 넣는다.

4. git submodule update: 서브 모듈의 리모트 저장소(인터넷이나 네트워크 어딘가에 있는 저장소)에서 데이터를 가져오고 서브 모듈을 포함한
                                  checkout(저장소에서 특정 커밋이나 브랜치로 돌아가고 싶을 때 사용)해야할 
                                  커밋(의미있는 변경 작업들을 저장소에 기록하는 동작)정보를 가져와서 서브모듈 프로젝트에 대한 checkout을 한다.

5. rm -rf React: 디렉토리를 지우고 싶으면서(-r) 변경사항을 커밋하지 않은 상태(-f)일때 이고 React 디렉토리를
                      이런 식으로 한 것이다.

6. recursive: 깃에서의 이 옵션은 하위 서브모듈까지 모두 클론하는 기능을 한다.
